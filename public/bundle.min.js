import ke from"../node_modules/dotenv/lib/main.js";import Me from"../node_modules/express/index.js";import $e from"../node_modules/cors/lib/index.js";import Le from"../node_modules/body-parser/index.js";import Ue from"../node_modules/mongoose/index.js";import we from"../node_modules/jsonwebtoken/index.js";var x=(o=>(o[o.INTERNAL_SERVER_ERROR=1e3]="INTERNAL_SERVER_ERROR",o[o.TOKEN_NOT_DEFINED=1100]="TOKEN_NOT_DEFINED",o[o.TOKEN_EXPIRED=1101]="TOKEN_EXPIRED",o[o.INVALID_TOKEN=1102]="INVALID_TOKEN",o[o.UNAUTHORIZED=1103]="UNAUTHORIZED",o[o.NO_PERMISSION=1104]="NO_PERMISSION",o[o.INVALID_PASSWORD=1105]="INVALID_PASSWORD",o[o.INVALID_CREDENTIALS=1106]="INVALID_CREDENTIALS",o[o.SESSION_EXPIRED=1107]="SESSION_EXPIRED",o[o.SESSION_UNAVAILABLE=1108]="SESSION_UNAVAILABLE",o[o.FIELD_REQUIRED=1200]="FIELD_REQUIRED",o[o.INVALID_FIELD_FORMAT=1201]="INVALID_FIELD_FORMAT",o[o.MISSING_PARAMETER=1202]="MISSING_PARAMETER",o[o.INVALID_INPUT=1203]="INVALID_INPUT",o[o.TOO_MANY_REQUESTS=1204]="TOO_MANY_REQUESTS",o[o.RESOURCE_NOT_FOUND=1300]="RESOURCE_NOT_FOUND",o[o.RESOURCE_ALREADY_EXISTS=1301]="RESOURCE_ALREADY_EXISTS",o[o.ENV_VARIABLE_NOT_DEFINED=1400]="ENV_VARIABLE_NOT_DEFINED",o[o.MISSING_DATABASE_URL=1401]="MISSING_DATABASE_URL",o[o.MISSING_JWT_SECRET=1402]="MISSING_JWT_SECRET",o[o.EXTERNAL_API_ERROR=1500]="EXTERNAL_API_ERROR",o[o.EXTERNAL_API_UNAUTHORIZED=1501]="EXTERNAL_API_UNAUTHORIZED",o[o.MONGO_ERROR=1600]="MONGO_ERROR",o))(x||{}),l=x;var b=[],k=t=>{t&&b.push(t)},g=(t,e,r)=>{let s=t.headers.authorization?.split(" ")[1];if(!s)return e.status(401).json({error:!0,type:"unauthorized",message:"Please log in."});if(b.includes(s))return e.status(401).json({error:!0,type:"token_blacklisted"});if(!process.env.JWT_SECRET)return e.status(500).json({error:!0,type:"server_error",code:l.ENV_VARIABLE_NOT_DEFINED});we.verify(s,process.env.JWT_SECRET,(n,a)=>{if(n)return n.name==="TokenExpiredError"?e.status(401).json({error:!0,type:"token_expired"}):e.status(401).json({error:!0,type:"invalid_token"});if(!a||typeof a!="object"||!("username"in a))return e.status(401).json({error:!0,type:"invalid_token"});t.user=a.username,r()})};import{body as S}from"../node_modules/express-validator/lib/index.js";var M=[S("name").isLength({min:6,max:50}).custom(t=>{if(!t)throw new Error("name_required");return!0}),S("username").isLength({min:6,max:30}).custom(t=>{if(!t)throw new Error("username_required");return!0}),S("email").isEmail().custom(t=>{if(!t)throw new Error("email_required");return!0}).normalizeEmail(),S("password").custom(t=>{let e=[];if(t?(t.length<8&&e.push("password_too_short"),/[a-z]/.test(t)||e.push("password_no_lowercase"),/[A-Z]/.test(t)||e.push("password_no_uppercase"),/[0-9]/.test(t)||e.push("password_no_number"),/[\W_]/.test(t)||e.push("password_no_special")):e.push("password_required"),e.length)throw new Error(e.join(","));return!0})];import De from"../node_modules/jsonwebtoken/index.js";import $ from"../node_modules/mongoose/index.js";var he=new $.Schema({username:{type:String,required:!0,unique:!0},lastActivity:{type:Date,required:!0},token:{type:String}}),Re=$.model("Session",he),w=Re;import I from"../node_modules/winston/lib/winston.js";var _e=I.createLogger({level:"info",format:I.format.combine(I.format.colorize(),I.format.simple()),transports:[new I.transports.Console]}),c=_e;var h=async(t,e,r)=>{let s=t.headers.authorization?.split(" ")[1];if(!s)return e.status(401).json({errror:!0,type:"unauthorized",code:l.MISSING_JWT_SECRET});if(!process.env.JWT_SECRET)return e.status(401).json({errror:!0,type:"unauthorized",code:l.ENV_VARIABLE_NOT_DEFINED});let n={error:!0,type:"server_error"};try{let u=De.verify(s,process.env.JWT_SECRET).username,i=await w.findOne({username:u});if(!i)return e.status(401).json({...n,code:l.SESSION_UNAVAILABLE});let d=new Date,m=24*60*60*1e3;if(d.getTime()-i.lastActivity.getTime()>m)return await w.deleteOne({username:u}),e.status(401).json({...n,code:l.SESSION_EXPIRED});i.lastActivity=d,await i.save(),r()}catch(a){return c.error(a),e.status(401).json({errorRes:n,code:l.INTERNAL_SERVER_ERROR})}};import L from"../node_modules/mongoose/index.js";var U=new L.Schema({indexSymbol:{type:String,required:!0,trim:!0},current:{type:Number,required:!0},percentChange:{type:Number,required:!0},createdAt:{type:Date,default:Date.now},updatedAt:{type:Date,default:Date.now}});U.pre("save",function(t){this.updatedAt=new Date,t()});var Ie=L.model("Index",U,"indices"),N=Ie;var B=async(t,e)=>{let r=["NIFTY 50","NIFTY BANK"];try{let s=await N.find({indexSymbol:{$in:r}}).lean().select("-_id -__v -createdAt -updatedAt");e.status(200).json(s)}catch(s){s instanceof Error&&e.status(500).json({error:s.message})}},F=async(t,e)=>{let r=t.body;try{await Promise.all(r.map(async s=>{await N.updateOne({indexSymbol:s.indexSymbol},{$set:{current:s.current,percentChange:s.percentChange,updatedAt:Date.now()},$setOnInsert:{createdAt:Date.now()}},{upsert:!0})})),e.status(200).json({message:"Indices data saved successfully!"})}catch(s){let n="Error saving indices data";return s instanceof Error&&(n+=s.message),c.error(n),e.status(500).json({message:"Error saving indices data"})}};import W from"../node_modules/mongoose/index.js";var G=new W.Schema({symbol:{type:String,required:!0,trim:!0},lastPrice:{type:Number,required:!0},change:{type:Number,required:!0},pChange:{type:Number,required:!0},previousClose:{type:Number,required:!0},open:{type:Number,required:!0},close:{type:Number,required:!0},basePrice:{type:Number,required:!0},createdAt:{type:Date,default:Date.now},updatedAt:{type:Date,default:Date.now}});G.pre("save",function(t){this.updatedAt=new Date,t()});var Se=W.model("MarketData",G,"marketdata"),j=Se;var H=async(t,e)=>{let r=t.body;try{await Promise.all(r.map(async s=>{await j.updateOne({symbol:s.symbol},{$set:{lastPrice:s.lastPrice,change:s.change,pChange:s.pChange,previousClose:s.previousClose,open:s.open,close:s.close,basePrice:s.basePrice,updatedAt:Date.now()},$setOnInsert:{createdAt:Date.now()}},{upsert:!0})})),e.status(200).json({message:"Data saved successfully!"})}catch(s){return e.status(500).json({message:"Error saving data",error:s})}};var V=async(t,e)=>{try{let r=await j.find({}).lean().select("-_id -__v -createdAt"),s=r.reduce((n,a)=>new Date(a.updatedAt)<new Date(n.updatedAt)?a:n);e.status(200).json({market:r,updatedAt:s.updatedAt})}catch(r){e.status(500).json({message:"Error retrieving market data",error:r})}};import q from"../node_modules/mongoose/index.js";var Ae=new q.Schema({dateAdded:{type:Date,required:!0,get:t=>new Date(t)},quantity:{type:Number,required:!0},avgPrice:{type:Number,required:!0},exchange:{type:String,required:!0,trim:!0},isGift:{type:Boolean,required:!1},isIPO:{type:Boolean,required:!1}}),J=new q.Schema({symbol:{type:String,required:!0,trim:!0},transactions:{type:[Ae],required:!0},userId:{type:String,required:!0,trim:!0},createdAt:{type:Date,default:Date.now},updatedAt:{type:Date,default:Date.now}});J.pre("save",function(t){this.updatedAt=new Date,t()});var ve=q.model("Holding",J,"holdings"),R=ve;import z from"../node_modules/mongoose/index.js";var Q=new z.Schema({name:{type:String,required:!0,trim:!0},email:{type:String,required:!0,trim:!0,unique:!0},username:{type:String,required:!0,unique:!0,trim:!0,minlength:6,maxlength:50},password:{type:String,required:!0,minlength:6},lastLogin:{type:Date,default:Date.now},lastActivity:{type:Date,default:Date.now},createdAt:{type:Date,default:Date.now},updatedAt:{type:Date,default:Date.now}});Q.pre("save",function(t){this.updatedAt=new Date,t()});var Ee=z.model("User",Q),y=Ee;var X=async(t,e)=>{try{let r=await y.findOne({username:t.user});if(!r)return e.status(500).json({error:!0,message:"Server error"});r.lastActivity=new Date,await r.save();let s=await R.find({userId:t.user}).lean().select("-_id -__v -createdAt -updatedAt -userId");if(!s)return e.status(404).json({message:"No holdings found for this user."});if(s.length===0)return e.status(200).json([]);let n=s.map(a=>({...a,transactions:a.transactions.map(u=>({...u,dateAdded:new Date(u.dateAdded).getTime()}))}));e.json(n)}catch(r){c.error(r),e.status(500).json({message:"Server error while fetching holdings",error:r})}},Y=async(t,e)=>{try{let r=await R.distinct("symbol");if(!r||r.length===0)return e.status(200).json({nse:[]});let s={nse:r};return e.json(s)}catch(r){return e.status(500).json(r)}},K=async(t,e)=>{let{symbol:r,dateAdded:s,quantity:n,avgPrice:a,exchange:u="NSE",isGift:i=!1,isIPO:d=!1}=t.body;try{let m={dateAdded:new Date(s),quantity:n,avgPrice:a,exchange:u,isGift:i,isIPO:d},f=await R.findOne({symbol:r,userId:t.user});f?f.transactions.push(m):f=new R({symbol:r,transactions:[m],userId:t.user}),await f.save(),e.status(200).send({message:`Holding ${r} added successfully!`})}catch(m){c.error(m),e.status(500).send(`Server error while adding holding, ${m}`)}},Z=async(t,e)=>{let r=t.body;if(!Array.isArray(r)||r.length===0)return e.status(400).send("Invalid data. Expected an array of holdings.");let s=r.map(n=>{let{symbol:a,dateAdded:u,quantity:i,avgPrice:d,exchange:m="NSE",isGift:f=!1,isIPO:D=!1}=n;return{updateOne:{filter:{symbol:a,userId:t.user},update:{$setOnInsert:{symbol:a,userId:t.user,createdAt:Date.now()},$push:{transactions:{dateAdded:new Date(u),quantity:i,avgPrice:d,exchange:m,isGift:f,isIPO:D}},$set:{updatedAt:Date.now()}},upsert:!0}}});try{let n=await R.bulkWrite(s);e.status(200).json({message:`Holdings uploaded successfully! Inserted: ${n.upsertedCount}, Modified: ${n.modifiedCount}`})}catch(n){c.error(n),e.status(500).send(`Server error while uploading holdings, ${n}`)}},C=async(t,e)=>{let{symbol:r,updatedTransactions:s}=t.body;if(!r||!s)return e.status(500).json({error:!0,message:"incorrect_payload"});let n=t.user,a=0,u=0;try{let i=await R.findOne({symbol:r,userId:n});if(!i)return e.status(404).json({error:!0,message:"holding_not_found"});for(let{transaction:d,deleted:m}of s){let f=i.transactions.findIndex(D=>D._id.toString()===d._id);f!==-1&&(m?(i.transactions.splice(f,1),u+=1):(i.transactions[f].set({dateAdded:new Date(d.dateAdded),quantity:d.quantity,avgPrice:d.avgPrice,exchange:d.exchange,isGift:d.isGift,isIPO:d.isIPO}),a+=1))}if(i.transactions.length===0)return await i.deleteOne(),e.status(200).json({error:!1,message:"holding_deleted",deletedCount:u,updatedCount:a});i.updatedAt=new Date,await i.save(),e.status(200).json({error:!1,message:"holding_updated",deletedCount:u,updatedCount:a})}catch(i){console.error(i),e.status(500).json({error:!0})}};import{MongoError as re}from"../node_modules/mongodb/lib/index.js";import A from"../node_modules/mongoose/index.js";var Oe=new A.Schema({visibleColumns:{type:[Number],default:[]},sortColumn:{type:Number,default:1},sortOrder:{type:Number,default:1}},{_id:!1}),ee=new A.Schema({dashboard:{type:Oe}},{_id:!1}),te=new A.Schema({mobile:{type:ee},computer:{type:ee},theme:{type:Number,required:!1},userId:{type:String,required:!0,trim:!0},createdAt:{type:Date,default:Date.now},updatedAt:{type:Date,default:Date.now}});te.pre("save",function(t){this.updatedAt=new Date,t()});var Te=A.model("Preference",te),v=Te;var se=async(t,e)=>{let r=t.user;try{let s=await y.findOne({username:r});if(!s)return e.status(404).json({error:!0,type:"user_not_found"});e.status(200).json({name:s.name})}catch(s){return c.error(s),e.status(500).json({error:!0,type:"server_error"})}},ne=async(t,e)=>{let r=t.user;try{let s=await v.findOne({userId:r})?.lean().select("-_id -__v -createdAt -updatedAt -userId");if(!s)return e.status(200).json({});e.status(200).json(s)}catch(s){return c.error(s),s instanceof re&&s.name==="CastError"?e.status(400).json({error:!0,type:"invalid_user_id"}):e.status(500).json({error:!0,type:"server_error"})}},oe=async(t,e)=>{let r=t.body,s=t.user;try{let n=await v.findOne({userId:s});n?(n.set(r),n.updatedAt=new Date):n=new v({userId:s,...r,createdAt:Date.now(),updatedAt:Date.now()}),await n.save(),e.status(200).send({message:"Preferences updated successfully!"})}catch(n){if(c.error(n),n instanceof re){if(n.name==="ValidationError")return e.status(400).json({error:!0,type:"invalid_data",code:l.MONGO_ERROR});if(n.name==="CastError")return e.status(400).json({error:!0,type:"invalid_user_id",code:l.MONGO_ERROR});if(n.code===11e3)return e.status(409).json({error:!0,type:"duplicate_preferences",code:l.MONGO_ERROR})}return e.status(500).json({error:!0,type:"server_error"})}};import Ne from"../node_modules/mongoose/index.js";var je=async(t,e)=>{if(!t||e<=0)throw new Error("Invalid symbol or multiplier");await Ne.connection.collection("holdings").updateMany({symbol:t},[{$set:{transactions:{$map:{input:"$transactions",as:"transaction",in:{dateAdded:"$$transaction.dateAdded",quantity:{$multiply:["$$transaction.quantity",e]},avgPrice:{$divide:["$$transaction.avgPrice",e]},exchange:"$$transaction.exchange",isGift:"$$transaction.isGift",isIPO:"$$transaction.isIPO"}}}}}]),c.info(`Successfully updated holdings of symbol ${t} with multiplier ${e}`)},ae=async(t,e)=>{let{symbol:r,multiplier:s}=t.body;try{await je(r,s),e.status(200).json({success:!0,symbol:r,multiplier:s})}catch(n){e.status(500).json({success:!1,message:n})}};import{validationResult as Pe}from"../node_modules/express-validator/lib/index.js";import P from"../node_modules/bcrypt/bcrypt.js";import T from"../node_modules/jsonwebtoken/index.js";import{MongoError as xe}from"../node_modules/mongodb/lib/index.js";import qe from"../node_modules/nodemailer/lib/nodemailer.js";var E,ie=!1,ue=()=>{process.env.GMAIL_ID&&process.env.GMAIL_PASSWORD&&(E=qe.createTransport({service:"gmail",auth:{user:process.env.GMAIL_ID,pass:process.env.GMAIL_PASSWORD}}),E.verify(t=>{t?c.error("Error verifying transporter:",t):(ie=!0,c.info("Transporter is ready to send emails"))}))},O=async(t,e,r)=>{if(!E||!ie)throw new Error("Transporter is not ready");let s={from:process.env.GMAIL_ID,to:t,subject:e,text:r};try{await E.sendMail(s)}catch(n){throw c.log("Error sending OTP:",n),n}};var ce=async(t,e,r)=>{let s="Welcome to MagnyFire! \u{1F389}",n=`Hi ${t},

Welcome to **MagnyFire**! We're super excited to have you join our community. \u{1F64C}

At MagnyFire, we're all about making your financial journey smooth and efficient. Here's what you can explore:  
- \u{1F4BC} **Portfolio Management:** Keep track of and manage your investments easily.  
- \u{1F4CA} **Financial Tools:** Unlock powerful tools to plan and optimize your finances.  
- \u{1F4B0} **Income Tax Calculators:** Accurately calculate your taxes and save time.  

Your registered details:  
- Username: ${r}
- Email: ${e}

We can't wait for you to explore all the amazing features MagnyFire has to offer! If you need help, feel free to reach out to our support team at contact@pradeepjadhav.com .  

Thank you for choosing MagnyFire. Let\u2019s work together to build your financial future! \u{1F680}  

Warm regards,  
The MagnyFire Team`;await O(e,s,n)};var _=[];setInterval(()=>{let t=new Date;_=_.filter(e=>e.expires>t)},60*60*1e3);var de=async(t,e)=>{let{username:r,password:s,email:n,name:a}=t.body,u=Pe(t);if(!process.env.JWT_SECRET)return e.status(500).json({error:!0,type:"server_error",code:l.ENV_VARIABLE_NOT_DEFINED});if(!u.isEmpty()){let i=u.array().flatMap(d=>d.msg.includes(",")?d.msg.split(",").map(m=>({type:m})):[{type:d.msg}]);return e.status(400).json({error:!0,type:"validation",errors:i})}try{if(await y.findOne({username:r}))return e.status(400).json({error:!0,type:"username_taken"});if(await y.findOne({email:n}))return e.status(400).json({error:!0,type:"email_taken"});let m=await P.hash(s,10);await new y({username:r,password:m,email:n,name:a}).save();let D=T.sign({username:r},process.env.JWT_SECRET,{expiresIn:"1d"});await w.findOneAndUpdate({username:r},{lastActivity:Date.now()},{upsert:!0,new:!0}),ce(a,n,r),e.status(201).json({token:D,success:!0})}catch(i){if(i instanceof xe&&i.code===11e3)return e.status(409).json({error:!0});e.status(500).json({error:!0})}},pe=async(t,e)=>{if(!process.env.JWT_SECRET)return e.status(500).json({error:!0,type:"server_error",code:l.ENV_VARIABLE_NOT_DEFINED});try{let{emailOrUsername:r,password:s}=t.body,n=r.indexOf("@")!==-1&&r.indexOf(".")!==-1,a=await y.findOne({...n?{email:r}:{username:r}});if(a&&await P.compare(s,a.password)){let u=T.sign({username:a.username},process.env.JWT_SECRET,{expiresIn:"30d"});return await w.findOneAndUpdate({username:a.username},{lastActivity:Date.now()},{upsert:!0,new:!0}),a.lastActivity=new Date,a.lastLogin=new Date,await a.save(),e.status(200).json({token:u})}else return e.status(401).json({error:!0,type:"invalid_credentials"})}catch(r){return c.error(r),e.status(500).send("Server error")}},me=async(t,e)=>{try{let r=t.headers.authorization?.split(" ")[1];return await k(r),e.sendStatus(204)}catch(r){let s="Server error";return r instanceof Error&&(s+=r.message),c.error(s),e.sendStatus(401).json({error:!0,type:"server_error",code:l.INTERNAL_SERVER_ERROR})}},le=async(t,e)=>{let{emailOrUsername:r}=t.body,s=r.indexOf("@")!==-1&&r.indexOf(".")!==-1,n=await y.findOne({...s?{email:r}:{username:r}});if(!n)return e.status(404).json({error:!0,type:"user_not_found"});let a=n.email,u=Math.floor(1e5+Math.random()*9e5),i="Your Password Reset Request",d=`Use OTP ${u} to update your login credentials at MagnyFire! The OTP expires in 15 minutes.`;try{await O(a,i,d);let m=new Date(Date.now()+15*60*1e3);return _.push({email:a,otp:u,expires:m}),e.status(200).json({success:!0})}catch{return e.status(500).json({success:!1,message:"cannot_send_otp"})}},fe=async(t,e)=>{if(!process.env.JWT_SECRET)return e.status(500).json({error:!0,type:"server_error"});let{emailOrUsername:r,otp:s}=t.body,n=r.indexOf("@")!==-1&&r.indexOf(".")!==-1,a=await y.findOne({...n?{email:r}:{username:r}});if(!a)return e.status(404).json({error:!0,type:"user_not_found"});let u=a.email,i=_.findIndex(f=>f.email===u&&f.otp===s);if(i===-1)return e.status(400).json({success:!1,message:"incorrect_otp"});let d=_[i];if(new Date>d.expires)return _.splice(i,1),e.status(400).json({success:!1,message:"otp_expired"});_.splice(i,1);let m=T.sign({email:u,updatedAt:a.updatedAt},process.env.JWT_SECRET,{expiresIn:"15m"});return e.status(200).json({success:!0,resetToken:m})},ye=async(t,e)=>{let{resetToken:r,newPassword:s}=t.body;if(!process.env.JWT_SECRET)return e.status(500).json({error:!0,type:"server_error"});try{let{email:n,updatedAt:a}=T.verify(r,process.env.JWT_SECRET),u=await y.findOne({email:n});if(!u)return e.status(404).json({success:!1,message:"user_not_found"});if(u.updatedAt.toISOString()!==a)return e.status(400).json({success:!1,message:"reset_token_expired"});let i=await P.hash(s,10);return u.password=i,u.updatedAt=new Date,await u.save(),e.status(200).json({success:!0,message:"password_updated"})}catch(n){if(n instanceof Error){if(c.error(n.message),n.name==="MongoError")return e.status(400).json({success:!1,message:"mongo_error"});if(n.name==="TokenExpiredError")return e.status(400).json({success:!1,message:"token_expired"});if(n.name==="JsonWebTokenError")return e.status(400).json({success:!1,message:"invalid_token"})}return e.status(400).json({success:!1,message:"invalid_or_expired_token"})}};import be from"../node_modules/node-cron/src/node-cron.js";be.schedule("0 0 * * *",async()=>{try{let t=new Date(Date.now()-864e5),e=await w.deleteMany({lastActivity:{$lt:t}});c.info(`${new Date().toISOString()} - Cleaned up ${e.deletedCount} expired sessions.`)}catch(t){c.error(`${new Date().toISOString()} - Error cleaning up expired sessions:`,t)}});ke.config();var p=Me();p.use($e());p.use(Le.json());ue();var ge=process.env.PORT||4e3;process.env.MONGODB_URI?Ue.connect(process.env.MONGODB_URI).then(()=>{c.info("MongoDB connected")}).catch(t=>c.error(t)):c.info("MONGODB_URI not defined in env");p.get("/userHoldingsList",Y);p.get("/api/holdings",g,h,X);p.post("/api/holdings",g,h,K);p.post("/api/editHolding",g,h,C);p.post("/api/upload",g,h,Z);p.post("/api/indices",F);p.get("/api/indices",g,B);p.get("/api/market",g,V);p.post("/api/market",H);p.post("/api/register",M,de);p.post("/api/login",pe);p.post("/api/logout",me);p.get("/api/preference",g,h,ne);p.put("/api/preference",g,h,oe);p.get("/api/user",g,h,se);p.post("/api/forgotPassword",le);p.post("/api/verifyOtp",fe);p.post("/api/updatePassword",ye);p.post("/api/multiplyQuantity",ae);p.listen(ge,()=>{c.info(`Server is running on http://localhost:${ge}`)});
